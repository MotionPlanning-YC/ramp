<launch>


<!-- <include file="$(find ramp_launch)/launch/corobots.machine" /> -->

<machine name="robot_1" address="192.168.1.104" env-loader="/opt/ros/hydro/env.sh" user="corobotclassic" />


<group ns="obstacle">
<!-- Obstacle -->
<node name="obstacle" pkg="ramp_planner" type="obstacle" output="screen" /> 
<node name="ramp_control" pkg="ramp_control" type="ramp_control" output="screen" machine="robot_1">
  <remap from="odometry" to="/robot_1/odom" /> 
  <param name="simulation" value="true" /> 
  <param name="orientation" value="1.9635" />
  <param name="check_imminent_coll" value="false" />
  <remap from="cmd_vel" to="/robot_1/cmd_vel" />
</node>


<arg name="phidgetInterfaceKit" value="1"/> 
<arg name="irFront" value="1"/> <!-- Index of the analog input for the front infrared sensor(default = 1). -1 if this one is not present or the data doesn't have to be read -->
  
<node pkg="corobot_phidget_ik" name="phidget_interface_kit" type="corobot_phidget" machine="robot_1">
    <param name="irFront" type="int" value="$(arg irFront)"/>
</node>




<arg name="TwoWheelDrive" value="1"/>
<arg name="base_width" value="0.238125"/> <!-- Distance between wheels --> 
<arg name="ticks_meter" value="9435"/> 

<arg name="PhidgetMotorController" value="1"/> <!-- 1 if you have the Phidget Motor Controller, 0 if you don't -->

<arg name="twistCommand" value="1"/> 

  <node pkg="phidget_motor" name="phidget_motor" type="PhidgetMotor.py" args="" machine="robot_1" />

  <node pkg="corobot_state_tf" name="corobot_state_tf" type="corobot_state_tf" machine="robot_1">
    <param name="ticks_meter" type="int" value="9435"/>
    <param name="base_width" type="double" value="$(arg base_width)"/>
    <param name="TwoWheelDrive" type="bool" value="$(arg TwoWheelDrive)"/>
    <param name="publish_odom_tf" type="bool" value="1"/>
  </node>




  <rosparam param="ticks_meter">9435</rosparam>

  <node pkg="differential_drive" type="pid_velocity.py" name="lpid_velocity" machine="robot_1">
      <remap from="wheel" to="lwheel"/>
      <remap from="motor_cmd" to="lmotor_cmd"/>
      <remap from="wheel_vtarget" to="lwheel_vtarget"/>
      <remap from="wheel_vel" to="lwheel_vel"/>
      <rosparam param="Kp">35</rosparam>
      <rosparam param="Ki">100</rosparam>
      <rosparam param="Kd">1</rosparam>
      <rosparam param="out_min">-100</rosparam>
      <rosparam param="out_max">100</rosparam>
      <rosparam param="rate">15</rosparam>
      <rosparam param="timeout_ticks">4</rosparam>
      <rosparam param="rolling_pts">8</rosparam>
  </node>
  <node pkg="differential_drive" type="pid_velocity.py" name="rpid_velocity" machine="robot_1">
      <remap from="wheel" to="rwheel"/>
      <remap from="motor_cmd" to="rmotor_cmd"/>
      <remap from="wheel_vtarget" to="rwheel_vtarget"/>
      <remap from="wheel_vel" to="rwheel_vel"/>
      <rosparam param="Kp">35</rosparam>
      <rosparam param="Ki">100</rosparam>
      <rosparam param="Kd">1</rosparam>
      <rosparam param="out_min">-100</rosparam>
      <rosparam param="out_max">100</rosparam>
      <rosparam param="rate">15</rosparam>
      <rosparam param="timeout_ticks">4</rosparam>
      <rosparam param="rolling_pts">8</rosparam>
  </node>

  <node pkg="differential_drive" type="twist_to_motors.py" name="twist_to_motors" machine="robot_1">
    <param name="base_width" type="double" value="$(arg base_width)"/>
    <!-- <rosparam param="base_width">$(arg base_width)</rosparam> -->
  </node>






</group>





</launch>
